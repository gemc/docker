#
# docker ubuntu20 base image
#--------------------------------------------------------------------------
#
# To manually build and push the container (use --no-cache to force rebuild):
#
#  docker build --progress=plain            -f Dockerfile-ubuntu20 -t gemc:ubuntu20 .
#  docker build --progress=plain --no-cache -f Dockerfile-ubuntu20 -t gemc:ubuntu20 .
#
#  docker tag gemc:ubuntu20 jeffersonlab/gemc:ubuntu20
#
#  docker push jeffersonlab/gemc:ubuntu20
#
#--------------------------------------------------------------------------
#
# To run in batch mode:
#
#  docker run -it --rm gemc:ubuntu20 bash
#
#  docker run -it --rm jeffersonlab/gemc:ubuntu20 bash
#
#--------------------------------------------------------------------------

FROM ubuntu:focal
LABEL maintainer "Maurizio Ungaro <ungaro@jlab.org>"

# See https://fedoraproject.org/wiki/EPEL
RUN apt -y update \
	&& apt -y upgrade


# notice: gcc-c++ is gcc8
RUN apt -y install \
	cmake \
	make \
	gcc \
	python3 \
	scons \
	mesa-libGLU-devel \
	libX11-devel \
	libXpm-devel \
	libXft-devel \
	libXt-devel \
	libXmu-devel \
	libXrender-devel \
#	expat-devel \
#	bzip2 \
#	qt5-default \
#	wget \
#	nano \
#	git \
#	which \
#	tcsh \
#	tigervnc-xorg-extension \
#	tigervnc-standalone-server \
#	xfce4-session \
#	xfce4-panel \
#	xfce4-terminal \
#	xfwm4 \
#	net-tools \
#	glx-utils \
#	xterm \
#	nedit \
#	glibc-langpack-en \
	&& apt-get clean \
	&& ln -s /usr/bin/cmake3 /usr/local/bin/cmake \
	&& ln -s /usr/bin/scons-3 /usr/bin/scons \
	&& git clone https://github.com/kanaka/noVNC.git /opt/noVNC \
	&& cd /opt/noVNC \
	&& ln -s vnc.html index.html \
	&& mkdir -p /container/utilities


# These define an alias and a script for easily starting up the
# servers from either bash or tcsh.
COPY scripts/xstart_alias.sh  /etc/profile.d
COPY scripts/xstart_alias.csh /etc/profile.d
COPY scripts/xstart.sh  /container/utilities
COPY scripts/xstart.csh /container/utilities
COPY scripts/xstop /usr/bin
ADD  dot_config /root/.config
