#
# docker image for CLAS12 Production Simulation - to be run in batch mode on OSG
#-------------------------------------------------------------------------------
#
# To manually build and push the container:
#
#  docker build -f Dockerfile-devel -t clas12tags:devel .
#
#  docker tag clas12tags:devel jeffersonlab/clas12tags:devel
#
#  docker push jeffersonlab/clas12tags:devel
#
#--------------------------------------------------------------------------
#
# To run in batch mode:
#
#  docker run -it --rm clas12tags:devel bash
#
#  docker run -it --rm jeffersonlab/clas12tags:devel bash
#
#--------------------------------------------------------------------------

FROM jeffersonlab/gemc:devel
LABEL maintainer "Maurizio Ungaro <ungaro@jlab.org>"

ENV JLAB_ROOT /jlab
ENV OSRELEASE Linux_CentOS8.1.1911-x86_64-gcc8
ENV JLAB_SOFTWARE /jlab/$JLAB_VERSION/$OSRELEASE
ENV JLAB_VERSION devel
ENV CLAS12TAG 4.4.0
ENV CCDBSQLITE ccdb_2020-04-05.sqlite
ENV COATJDOWNLOAD coatjava-6.5.3.tar.gz
ENV JAVADOWNLOAD jre-8u191-linux-x64.tar.gz

ENV WGETOPTONS -q --secure-protocol=TLSv1 --no-check-certificate

# gfortran for clasdis generator
# root for genKYandOnePion and evio2root
# xemacs to help users
# libXtst for kpp-plots
# libfonts for kpp-plots fonts
RUN yum install -y gcc-gfortran xemacs libXtst libfonts root root-montecarlo-eg \
	&& yum clean all

WORKDIR $JLAB_ROOT

# Checking out clas12Tags and compiling CLAS12TAG
# Removing un-used tags and .git stuff
RUN git clone https://github.com/gemc/clas12Tags.git \
	&& cd $JLAB_ROOT/clas12Tags \
	&& source $JLAB_ROOT/$JLAB_VERSION/ce/jlab.sh \
	&& rm -rf $JLAB_ROOT/$JLAB_VERSION/$OSRELEASE/gemc \
	&& ./goInstall $CLAS12TAG \
	# delete unecessary files
	&& rm -rf .git* `ls | grep -v goIns | grep -v $CLAS12TAG | grep -v env | grep -v REA | grep -v gcards`

# Getting the field maps
# Replacing the scripts in /etc and with the environment scripts
RUN mkdir -p /jlab/noarch/data \
	&& cd /jlab/noarch/data \
	&& wget $WGETOPTONS https://clasweb.jlab.org/12gev/field_maps/TorusSymmetric.dat \
	&& wget $WGETOPTONS https://clasweb.jlab.org/12gev/field_maps/clas12NewSolenoidFieldMap.dat \
	&& rm /etc/profile.d/jlab.csh \
	&& rm /etc/profile.d/jlab.sh \
	&& mkdir -p /jlab/tests/

# reconstruction: java and coatjava
RUN   mkdir -p $JLAB_SOFTWARE/clas12/lib \
	&& mkdir -p $JLAB_SOFTWARE/clas12/bin \
	&& mkdir -p $JLAB_SOFTWARE/clas12/inc \
	&& cd $JLAB_SOFTWARE \
	# JAVA from Oracle
	# Get JRE tar.gz from https://www.oracle.com/technetwork/java/javase/downloads/index.html
	# The .tar.gz is then put at JLAB on /group/12gev_phys/www/packages/sources/java
	&& wget $WGETOPTONS https://www.jlab.org/12gev_phys/packages/sources/java/$JAVADOWNLOAD \
	&& tar -zxpvf $JAVADOWNLOAD \
	# reconstruction: coatjava. untar file in coatjava directory
	&& cd $JLAB_SOFTWARE/clas12 \
	&& wget $WGETOPTONS https://clasweb.jlab.org/clas12offline/distribution/coatjava/$COATJDOWNLOAD \
	&& mkdir -p coatjava ; tar -zxpvf $COATJDOWNLOAD  --strip-components 1 -C coatjava

# CCDBSQLITE
RUN cd /jlab/work \
	&& wget $WGETOPTONS https://clasweb.jlab.org/clas12offline/sqlite/ccdb/$CCDBSQLITE

# Generators from clas12-mcgen
RUN cd /jlab/work \
	&& git clone --recurse-submodules https://github.com/JeffersonLab/clas12-mcgen.git \
	&& cd clas12-mcgen \
	&& rm -rf .git* */.git* \
	&& make \
	&& cp bin/*   $JLAB_SOFTWARE/clas12/bin







ADD environment/environment-$CLAS12TAG".csh"  /etc/profile.d
ADD environment/environment-$CLAS12TAG".sh"   /etc/profile.d
WORKDIR $JLAB_ROOT/work

# Temp /condor for el6 binding
RUN mkdir /condor \
	&& mkdir /etc/condor
