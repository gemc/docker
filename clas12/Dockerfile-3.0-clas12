#
# gemc docker clas12 system for 3.0 libraries image
# --------------------------------------------------------------------------
#
# To manually build and push the container (use --no-cache to force rebuild):
#
#  docker pull jeffersonlab/gemc:3.0
#  docker build --progress=plain            -f Dockerfile-3.0-clas12 -t gemc:3.0-clas12 .
#  docker build --progress=plain --no-cache -f Dockerfile-3.0-clas12 -t gemc:3.0-clas12 .
#
#  docker tag gemc:3.0-clas12 jeffersonlab/gemc:3.0-clas12
#
#  docker push jeffersonlab/gemc:3.0-clas12
#
# --------------------------------------------------------------------------
#
# To run in batch mode:
#
#  docker run -it --rm -v ~/mywork:/jlab/work/mywork              gemc:3.0-clas12 bash
#
#  docker run -it --rm -v ~/mywork:/jlab/work/mywork jeffersonlab/gemc:3.0-clas12 bash
#
# --------------------------------------------------------------------------

FROM jeffersonlab/gemc:3.0
LABEL maintainer "Maurizio Ungaro <ungaro@jlab.org>"

# stashing jlab-g3-clas12.csh onto /root
COPY jlab-g3-clas12.csh /root/jlab.csh

ENV JLAB_ROOT /jlab
ENV JLAB_VERSION 2.6

# CLAS12TAG is needed to compare the geometry
ENV CLAS12TAG 5.1

WORKDIR $JLAB_ROOT

RUN yum install -y \
	java-11-openjdk-devel \
	&& yum clean packages \
	&& yum clean all \
	&& rm -rf /var/cache/yum

# Groovy installation
# Warning: this does not work at JLAB due to certificate problems
# Adding --insecure did not work
RUN curl -s get.sdkman.io | bash \
	&& source "$HOME/.sdkman/bin/sdkman-init.sh" \
	&& sdk install groovy

# ccdb for clas12 digitization
RUN cd $JLAB_ROOT/$JLAB_VERSION/install  \
	&& cp /root/jlab.csh $JLAB_ROOT/$JLAB_VERSION/ce/ \
	&& cp $JLAB_ROOT/$JLAB_VERSION/ce/jlab.* /etc/profile.d/ \
	&& source $JLAB_ROOT/$JLAB_VERSION/ce/jlab.sh \
	&& ./go_ccdb \
	&& rm -rf $JLAB_SOFTWARE/ccdb/*/tmp \
	&& rm -rf $JLAB_SOFTWARE/ccdb/*/java \
	&& rm -rf $JLAB_SOFTWARE/ccdb/*/doc \
	&& rm -rf $JLAB_SOFTWARE/ccdb/*/swig

# Checking out clas12Tags and compiling CLAS12TAG
# Removing un-used tags and .git stuff
RUN rm -rf clas12Tags \
   && git clone https://github.com/gemc/clas12Tags.git \
	&& cd clas12Tags \
	# delete everything but $CLAS12TAG
	&& rm -rf .git* `ls | grep -v goIns | grep -v $CLAS12TAG | grep -v env | grep -v REA | grep -v gcards`

# Running update.sh to install coatjava
# Install clas12 geo/plugins to clas12-systems/systemsTxtDB (done by installCLAS12.sh)
# Install streamer plugins to clas12-systems/systemsTxtDB (GPLUGIN_PATH)
RUN source $JLAB_ROOT/$JLAB_VERSION/ce/jlab.sh \
	&& mkdir $JLAB_SOFTWARE/clas12-systems \
	&& cd  $JLAB_SOFTWARE/clas12-systems \
	#&& git clone https://github.com/gemc/clas12-systems $G3CLAS12_VERSION \
	&& git clone https://github.com/maureeungaro/clas12-systems $G3CLAS12_VERSION \
	&& cd $G3CLAS12_VERSION \
	&& ./installClas12Coatjava.sh \
	&& cp $GEMC/gstreamer* $GPLUGIN_PATH

WORKDIR $JLAB_ROOT
CMD bash /container/utilities/xstart.sh && sleep infinity
